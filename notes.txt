docker run --name pg13-container1 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=test-db -p 5433:5432 -d postgres:13

docker pull ubuntu:20.04
docker run -it --name bucardo-client ubuntu:20.04


# create sample database
pgbench -i -s 50 -U postgres test-db
pgbench -c 10 -j 2 -t 10000 -U postgres test-db


# install bucardo on ubunut docker
apt update && apt upgrade -y
apt install -y sudo wget curl
apt install -y postgresql-client libdbi-perl libdbd-pg-perl libboolean-perl libtest-simple-perl libdatetime-perl libdbix-safe-perl iputils-ping nano
wget https://bucardo.org/downloads/Bucardo-5.6.0.tar.gz.asc
wget https://bucardo.org/downloads/DBIx-Safe-1.2.5.tar.gz


# adding database to bucardo

bucardo add db source_db dbhost=pg13-container1 dbport=5432 dbname=test-db dbuser=postgres dbpass=postgres
bucardo add db target_db dbhost=pg13-container2 dbport=5432 dbname=test-db dbuser=postgres dbpass=postgres

bucardo add all tables --herd=exampleherd
bucardo add all sequences --herd=exampleherd

# adding sync to bucardo
bucardo add sync dev_sync herd=exampleherd dbs=target_db:source,source_db:target onetimecopy=2


docker ps
docker exec -it bucardo-client bash



# adding database to bucardo

bucardo add db sarwa_source_db dbhost=pg13-container1 dbport=5432 dbname=sarwa_insurance dbuser=postgres dbpass=postgres
bucardo add db sarwa_target_db dbhost=pg13-container2 dbport=5432 dbname=sarwa_insurance dbuser=postgres dbpass=postgres


# adding tables and sequances to bucardo from source database

bucardo add all tables db=sarwa_target_db --herd=sarwaHerd
bucardo add all sequences db=sarwa_target_db --herd=sarwaHerd


# create sync 
bucardo add sync sarwa_sync herd=sarwaHerd dbs=sarwa_source_db:source,sarwa_target_db:target onetimecopy=2


bucardo remove db sarwa_target_db --force
bucardo add all tables db=sarwa_source_db --herd=sarwaHerd
bucardo add all sequnaces db=sarwa_source_db --herd=sarwaHerd


# to solve the problem of the table not being synced
update current sync 
bucardo stop 
bucardo update sync sarwa_sync onetimecopy=2
bucardo kick sarwa_sync
bucardo start 

# select counts of all tables in a database on current schema
# not accurate 
SELECT
    schemaname || '.' || relname AS table_name,
    n_live_tup AS row_count
FROM
    pg_stat_user_tables
ORDER BY
    row_count DESC;

# accurate but slow 
CREATE OR REPLACE FUNCTION count_table_rows(schema_name TEXT, table_name TEXT)
RETURNS BIGINT AS $$
DECLARE
  row_count BIGINT;
BEGIN
  EXECUTE format('SELECT COUNT(*) FROM %I.%I', schema_name, table_name)
  INTO row_count;

  RETURN row_count;
END;
$$ LANGUAGE plpgsql;

SELECT table_name, count_table_rows('public', table_name) AS row_count
FROM information_schema.tables
WHERE table_schema = 'public'
order by row_count desc, table_name desc ;


# create a backup of a database on a remote server (ddl & data)
pg_dump -U username -h source_host -Fc source_database > backup.dump

# restore a backup of a database on a remote server (ddl & data)
pg_restore -U username -h target_host -d target_database -Fc backup.dump

# create a backup of a database on a remote server (ddl only)
pg_dump -U username -h host -s -d source_database > database_schema.sql

# restore a backup of a database to new database on remote server (ddl only)
psql -U username -h host -d target_database -f database_schema.sql



NOTES:

1- any change on schema ddl (add|update|remove => table|columne|relation|constrain|sequance ... ) 
  a) should reconfigure bucardo dbs and sync from scratch
  b) should update ddl on destination 
  
  if a or b not happen -> sync stop and failed and no data sync between source and destination
  
  
2- if sync is recoverd by do step 1 (a,b) -> missing data synced successfuly  



Notes: 
1- bucardo add sync sarwa_sync herd=sarwaHerd dbs=sarwa_target_db:source,sarwa_source_db:target onetimecopy=2

onetimecopy=2
sync and not duplicate data

2- create bucardo schema on source db only to track changes

3- If bucardo schema deleted from source db, any changes happen after deletion not be able to track, so if we restor sync connication again
it will track only what changed after sync is back.
example
1) delete bucardo schema from  source db
2) chnage data on source db tables
table1 => add row a,b
3) restore bucardo schema by reconfigure bucarod client again and start sync
4) row a,b not migrate to target, becouse bucardo don't know that it was changed before 
5) new row instered C
6) c will be synced successful
 